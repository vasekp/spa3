:not(:defined) {
  display: none;
}

*[hidden] {
  display: none !important;
}

.inactive {
  opacity: .5;
}

*:focus {
  outline: none;
}

*:not([tabindex="-1"]):focus-visible {
  box-shadow: var(--shadow-focus);
}

.trans {
  display: contents;
}

/* For browsers without :focus-visible. Separate rule as otherwise
 * the unsupported selector would invalidate it. */
input[type="text"]:focus, textarea:focus, spa-textbox:focus-within {
  box-shadow: var(--shadow-focus);
}

.inner-outline:focus-visible,
spa-scroll:focus-visible {
  outline: none;
  box-shadow: inset var(--shadow-focus);
}

.no-outline:focus {
  box-shadow: none;
}

.no-outline:focus-visible {
  box-shadow: none;
}

input, textarea, button {
  appearance: none;
  -webkit-appearance: none;
  font: inherit;
  padding: 0;
  margin: 0;
  border: none;
  outline: none;
  background: none;
  color: inherit;
}

button {
  cursor: inherit;
}

textarea {
  box-sizing: border-box;
  resize: none;
}

.inline {
  display: inline;
  height: 1em;
  width: 1em;
  flex: none;
  box-sizing: content-box;
  vertical-align: var(--valign-em);
  align-self: center;
}

@keyframes loading {
  from { background-position: 200%; }
  to   { background-position: 0%; }
}

.spa-loading {
  display: flex;
  justify-content: center;
  margin: 0 var(--margin-small);
  position: relative;
}

span.spa-loading {
  display: inline-flex;
}

.spa-loading::before {
  content: "\25cf  \25cf  \25cf"; /* One space ignored after each unicode escape */
}

.spa-loading::after {
  display: inline-block;
  position: absolute;
  content: "";
  width: 3em;
  height: 100%;
  top: 0;
  margin: 0 auto;
  background: linear-gradient(90deg, var(--color-bg-00) 0%, var(--color-bg-main) 50%, var(--color-bg-00) 100%) repeat 0/200%;
  animation: loading 1s linear infinite running;
}

a {
  color: inherit;
  text-decoration: none;
}

.display-update {
  display: var(--display-update);
}
