@import "../../css/colors.css";

:host {
  display: block;
}

:host([hidden]) {
  display: none;
}

#content {
  border: var(--border);
  border-radius: .5rem;
}

#header {
  display: flex;
  border-bottom: var(--border);
  font-size: 80%;
  line-height: 100%;
}

#header[hidden] {
  display: none;
}

#header > * {
  padding: 0 var(--margin-base-scaled);
}

/*#header > * + * {
  border-left: var(--border);
}*/

#textContainer {
  margin: var(--margin-small);
  min-height: var(--abs-line-height);
  position: relative;
}

#text {
  padding: 0;
  overflow: hidden;
  white-space: pre-wrap;
}

#tedit {
  border: none;
  outline: none;
  margin: 0;
  background: inherit;
  font: inherit;
  box-sizing: border-box;
  resize: none;
  position: absolute;
  padding: 0;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

#tedit:focus {
  box-shadow: 0 0 .2rem #888;
}

#fill {
  flex-grow: 1;
}

#props {
  margin: var(--margin-small) var(--margin-base);
  display: flex;
  align-items: center;
}

#props[hidden] {
  display: none;
}

.inline {
  height: 1em;
  width: 1em;
  vertical-align: top;
}

#props {
  margin: var(--margin-small) var(--margin-base);
  display: flex;
  align-items: center;
}

#props[hidden] {
  display: none;
}

@keyframes waiting {
  0% { opacity: 1; }
  30% { opacity: 1; }
  50% { opacity: .2; }
  80% { opacity: .2; }
  100% { opacity: 1; }
}

#geo.waiting {
  animation: 1s waiting infinite running;
}

#geo, #geoSet {
  content: url("../../images/geo.svg");
}

#geo.error, #geoSet.reset {
  content: url("../../images/geox.svg");
}

#geoSet {
  margin-left: auto;
}
